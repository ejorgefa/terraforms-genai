name: Create Remote State

on:
  push:
    branches: [dev]
  pull_request:
    branches: [ main ]
# Allows to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  LOCATION: ${{ vars.LOCATION }}
  RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}
  PROCESS: Planning
  WORKING_DIRECTORY: ./

permissions: read-all

jobs:
  deploy-azure-infra-terraform:
    name: Deploy to Azure with Terraform
    runs-on: ubuntu-latest
    environment: Development

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.WORKING_DIRECTORY }}
    
    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Azure with Service Principal
        uses: Azure/login@v1.4.3
        with:
          # Paste output of `az ad sp create-for-rbac` as value of secret variable: AZURE_CREDENTIALS
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Create Terraform backend state storage
        uses: Azure/cli@v1.0.6
        with:
          # Azure CLI version to be used to execute the script. If not provided, latest version is used
          # azcliversion: 2.34.1 # optional, default is agentazcliversion
          inlineScript: |
            az version

            if [ $(az group exists --name $RESOURCE_GROUP = false ]; then 
              az group create --name $RESOURCE_GROUP --location ${{ vars.LOCATION }}
            else
              echo $resourceGroup
            fi


